name: Publish packages

on:
  push:
    tags:
      - "@cryptkeeperzk/providers-*"
      - "@cryptkeeperzk/types-*"
      - "@cryptkeeperzk/zk-*"

env:
  CRYPTKEEPER_DEBUG: false
  USER_MNEMONIC: false
  E2E: false
  METAMASK_EXTENSION_ID: "nkbihfbeogaeaoehlefnkodbefgpgknn"
  METAMASK_VERSION: "10.28.1"
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
  FREIGHT_TRUST_NETWORK: ${{ secrets.FREIGHT_TRUST_NETWORK }}
  PULSECHAIN_API_KEY: ${{ secrets.PULSECHAIN_API_KEY }}
  BANDADA_API_URL: ${{ vars.BANDADA_API_URL }}
  BANDADA_URL: ${{ vars.BANDADA_URL }}
  TARGET: "chrome"
  DEMO_URL: ${{ vars.DEMO_URL }}
  MERKLE_MOCK_SERVER: ${{ vars.MERKLE_MOCK_SERVER }}
  PACKAGE_VERSION: ""
  MANIFEST_VERSION: 3
  VERIFIABLE_CREDENTIALS: false
  WEBPACK_ANALYZER: false
  TEST_GROUP_ID: ${{ vars.TEST_GROUP_ID }}
  TEST_GROUP_API_KEY: ${{ vars.TEST_GROUP_API_KEY }}
  TEST_GROUP_INVITE_CODE: ${{ vars.TEST_GROUP_INVITE_CODE }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-packages:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18]

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - run: pnpm install --frozen-lockfile --prefer-offline

      - name: Get providers version
        if: startsWith(github.ref_name, '@cryptkeeperzk/providers-') == true
        run: |-
          echo "PACKAGE_VERSION=$(node -e "console.log('${{ github.ref_name }}'.split('-')[1])")" >> $GITHUB_ENV

      - run: |-
          pnpm run build
          zip -r cryptkeeper-providers-v${{ env.PACKAGE_VERSION }}.zip ./packages/providers/dist

      - name: Setup publisher
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          pnpm config set commit-hooks false
          pnpm config set git-checks false 
          pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Sign @cryptkeeperzk/providers
        if: startsWith(github.ref_name, '@cryptkeeperzk/providers-') == true
        run: |-
          export GPG_TTY=`tty`
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --passphrase "$GPG_SIGNING_KEY_PASSPHRASE" --batch --pinentry-mode loopback --import
          gpg --passphrase $GPG_SIGNING_KEY_PASSPHRASE --batch --pinentry-mode loopback --detach-sign --armor cryptkeeper-providers-v${{ env.PACKAGE_VERSION }}.zip
          echo $(shasum cryptkeeper-providers-v${{ env.PACKAGE_VERSION }}.zip | awk '{ print $1 }') >> cryptkeeper-providers-checksum-v${{ env.PACKAGE_VERSION }}.txt
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_KEY_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSPHRASE }}

      - name: Sign @cryptkeeperzk/zk
        if: startsWith(github.ref_name, '@cryptkeeperzk/zk-') == true
        run: |-
          export GPG_TTY=`tty`
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --passphrase "$GPG_SIGNING_KEY_PASSPHRASE" --batch --pinentry-mode loopback --import
          gpg --passphrase $GPG_SIGNING_KEY_PASSPHRASE --batch --pinentry-mode loopback --detach-sign --armor cryptkeeper-zk-v${{ env.PACKAGE_VERSION }}.zip
          echo $(shasum cryptkeeper-zk-v${{ env.PACKAGE_VERSION }}.zip | awk '{ print $1 }') >> cryptkeeper-zk-checksum-v${{ env.PACKAGE_VERSION }}.txt
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_KEY_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSPHRASE }}

      - name: Sign @cryptkeeperzk/types
        if: startsWith(github.ref_name, '@cryptkeeperzk/types-') == true
        run: |-
          export GPG_TTY=`tty`
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --passphrase "$GPG_SIGNING_KEY_PASSPHRASE" --batch --pinentry-mode loopback --import
          gpg --passphrase $GPG_SIGNING_KEY_PASSPHRASE --batch --pinentry-mode loopback --detach-sign --armor cryptkeeper-types-v${{ env.PACKAGE_VERSION }}.zip
          echo $(shasum cryptkeeper-types-v${{ env.PACKAGE_VERSION }}.zip | awk '{ print $1 }') >> cryptkeeper-types-checksum-v${{ env.PACKAGE_VERSION }}.txt
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_KEY_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSPHRASE }}

      - name: Publish @cryptkeeperzk/providers
        if: startsWith(github.ref_name, '@cryptkeeperzk/providers-') == true
        working-directory: ./packages/providers
        run: |-
          pnpm run publish:package -- --access=public --no-git-checks
          cd ../..
          gh release upload "${{ github.ref_name }}" "cryptkeeper-providers-v${{ env.PACKAGE_VERSION }}.zip" "cryptkeeper-providers-checksum-v${{ env.PACKAGE_VERSION }}.txt" "cryptkeeper-providers-v${{ env.PACKAGE_VERSION }}.zip.asc"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish @cryptkeeperzk/zk
        if: startsWith(github.ref_name, '@cryptkeeperzk/zk-') == true
        working-directory: ./packages/zk
        run: |-
          pnpm run publish:package -- --access=public --no-git-checks
          cd ../..
          gh release upload "${{ github.ref_name }}" "cryptkeeper-zk-v${{ env.PACKAGE_VERSION }}.zip" "cryptkeeper-zk-checksum-v${{ env.PACKAGE_VERSION }}.txt" "cryptkeeper-zk-v${{ env.PACKAGE_VERSION }}.zip.asc"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish @cryptkeeperzk/types
        if: startsWith(github.ref_name, '@cryptkeeperzk/types-') == true
        working-directory: ./packages/types
        run: |-
          pnpm run publish:package -- --access=public --no-git-checks
          cd ../..
          gh release upload "${{ github.ref_name }}" "cryptkeeper-types-v${{ env.PACKAGE_VERSION }}.zip" "cryptkeeper-types-checksum-v${{ env.PACKAGE_VERSION }}.txt" "cryptkeeper-types-v${{ env.PACKAGE_VERSION }}.zip.asc"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
