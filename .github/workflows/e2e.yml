name: E2E
on:
  workflow_dispatch:

  schedule:
    - cron: "0 9 * * *" # run every day at 9:00 UTC

  push:
    branches: master
  pull_request:
    branches: master

env:
  CRYPTKEEPER_DEBUG: false
  RANDOM_IDENTITY: true
  METAMASK_EXTENSION_ID: "gopbpnbkpnnmomhlhkpljncmmoidkioi"
  METAMASK_VERSION: "10.28.1"
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
  FREIGHT_TRUST_NETWORK: ${{ secrets.FREIGHT_TRUST_NETWORK }}
  PULSECHAIN_API_KEY: ${{ secrets.PULSECHAIN_API_KEY }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18]
        command: ["e2e"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Setup demo
        working-directory: ./demo
        run: npm ci --prefer-offline --no-audit

      - name: Build extension
        run: METAMASK_EXTENSION_ID=${{ env.METAMASK_EXTENSION_ID }} npm run build

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm run ${{ matrix.command }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
