import type { IGroupData, IIdentityData } from "@cryptkeeperzk/types";

export enum OperationType {
  CREATE_IDENTITY = "CREATE_IDENTITY",
  DELETE_IDENTITY = "DELETE_IDENTITY",
  DELETE_ALL_IDENTITIES = "DELETE_ALL_IDENTITIES",
  DOWNLOAD_BACKUP = "DOWNLOAD_BACKUP",
  UPLOAD_BACKUP = "UPLOAD_BACKUP",
  RESET_PASSWORD = "RESET_PASSWORD",
  ADD_VERIFIABLE_CREDENTIAL = "ADD_VERIFIABLE_CREDENTIAL",
  RENAME_VERIFIABLE_CREDENTIAL = "RENAME_VERIFIABLE_CREDENTIAL",
  DELETE_VERIFIABLE_CREDENTIAL = "DELETE_VERIFIABLE_CREDENTIAL",
  DELETE_ALL_VERIFIABLE_CREDENTIALS = "DELETE_ALL_VERIFIABLE_CREDENTIALS",
  REJECT_VERIFIABLE_CREDENTIAL_REQUEST = "REJECT_VERIFIABLE_CREDENTIAL_REQUEST",
  GENERATE_VERIFIABLE_PRESENTATION = "GENERATE_VERIFIABLE_PRESENTATION",
  REJECT_VERIFIABLE_PRESENTATION_REQUEST = "REJECT_VERIFIABLE_PRESENTATION_REQUEST",
  REVEAL_IDENTITY_COMMITMENT = "REVEAL_IDENTITY_COMMITMENT",
  JOIN_GROUP = "JOIN_GROUP",
}

export interface Operation {
  id: string;
  type: OperationType;
  identity?: IIdentityData;
  group?: Partial<IGroupData>;
  createdAt: string;
}

export interface HistorySettings {
  isEnabled: boolean;
}
